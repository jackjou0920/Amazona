{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (product._id) {\n      const {\n        data\n      } = await Axios.put(\"/api/products/\" + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.post(\"/api/products\", product, {\n        header: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["/Users/jackjou/Desktop/self-practice/Amazona/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","put","headers","token","post","header","detailsProduct","productId"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL } from '../constants/productConstants'\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await axios.get(\"/api/products\");\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  }\n  catch (error) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\n    const { userSignin: { userInfo } } = getState();\n    if (product._id) {\n      const { data } = await Axios.put(\"/api/products/\" + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    } else {\n      const { data } = await Axios.post(\"/api/products\", product, {\n        header: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\n    }\n\n  } catch (error) {\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\n  }\n}\n\nconst detailsProduct = (productId) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    const { data } = await axios.get(\"/api/products/\" + productId);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  }\n  catch (error) {\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\n  }\n}\n\nexport { listProducts, detailsProduct, saveProduct }"]},"metadata":{},"sourceType":"module"}